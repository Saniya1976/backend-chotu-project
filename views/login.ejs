<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - Welcome Back</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #667eea;
            --primary-dark: #5a67d8;
            --secondary-color: #764ba2;
            --background: #f7fafc;
            --surface: #ffffff;
            --text-primary: #2d3748;
            --text-secondary: #718096;
            --border: #e2e8f0;
            --shadow: rgba(0, 0, 0, 0.1);
            --error: #e53e3e;
            --success: #38a169;
        }

        [data-theme="dark"] {
            --background: #1a202c;
            --surface: #2d3748;
            --text-primary: #f7fafc;
            --text-secondary: #a0aec0;
            --border: #4a5568;
            --shadow: rgba(0, 0, 0, 0.3);
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            color: var(--text-primary);
            transition: all 0.3s ease;
            position: relative;
            overflow-x: hidden;
        }

        .theme-toggle {
            position: fixed;
            top: 20px;
            right: 20px;
            background: var(--surface);
            border: 2px solid var(--border);
            color: var(--text-primary);
            padding: 10px 15px;
            border-radius: 25px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            transition: all 0.3s ease;
            z-index: 1000;
            box-shadow: 0 4px 15px var(--shadow);
        }

        .theme-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px var(--shadow);
        }

        .floating-shapes {
            position: absolute;
            width: 100%;
            height: 100%;
            overflow: hidden;
            z-index: 1;
        }

        .shape {
            position: absolute;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float 15s infinite linear;
        }

        .shape:nth-child(1) {
            width: 80px;
            height: 80px;
            left: 10%;
            animation-delay: 0s;
        }

        .shape:nth-child(2) {
            width: 120px;
            height: 120px;
            left: 80%;
            animation-delay: -5s;
        }

        .shape:nth-child(3) {
            width: 60px;
            height: 60px;
            left: 50%;
            animation-delay: -10s;
        }

        @keyframes float {
            0% {
                transform: translateY(100vh) rotate(0deg);
            }
            100% {
                transform: translateY(-100px) rotate(360deg);
            }
        }

        .form-container {
            background: var(--surface);
            padding: 40px;
            border-radius: 20px;
            box-shadow: 0 20px 40px var(--shadow);
            width: 100%;
            max-width: 400px;
            position: relative;
            z-index: 10;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .form-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 25px 50px var(--shadow);
        }

        .form-header {
            text-align: center;
            margin-bottom: 30px;
        }

        .form-header h2 {
            color: var(--text-primary);
            font-size: 28px;
            font-weight: 700;
            margin-bottom: 8px;
        }

        .form-header p {
            color: var(--text-secondary);
            font-size: 16px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: var(--text-primary);
            font-weight: 500;
            font-size: 14px;
        }

        .input-wrapper, .password-wrapper {
            position: relative;
            display: flex;
            align-items: center;
        }

        .input-wrapper input, .password-wrapper input {
            width: 100%;
            padding: 15px 45px 15px 15px;
            border: 2px solid var(--border);
            border-radius: 12px;
            font-size: 16px;
            background: var(--surface);
            color: var(--text-primary);
            transition: all 0.3s ease;
        }

        .input-wrapper input:focus, .password-wrapper input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .input-icon {
            position: absolute;
            right: 15px;
            font-size: 18px;
            pointer-events: none;
        }

        .password-wrapper {
            position: relative;
        }

        .password-toggle {
            position: absolute;
            right: 45px;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 18px;
            padding: 5px;
            border-radius: 4px;
            transition: all 0.2s ease;
        }

        .password-toggle:hover {
            background: var(--border);
        }

        .forgot-password {
            text-align: right;
            margin-top: 8px;
        }

        .forgot-password a {
            color: var(--primary-color);
            text-decoration: none;
            font-size: 14px;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .forgot-password a:hover {
            color: var(--primary-dark);
        }

        .button-group {
            margin-top: 30px;
        }

        .btn {
            width: 100%;
            padding: 15px;
            border: none;
            border-radius: 12px;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .btn-primary {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 25px rgba(102, 126, 234, 0.3);
        }

        .btn-primary:active {
            transform: translateY(0);
        }

        .form-footer {
            text-align: center;
            margin-top: 25px;
            padding-top: 25px;
            border-top: 1px solid var(--border);
        }

        .form-footer p {
            color: var(--text-secondary);
            font-size: 14px;
        }

        .form-footer a {
            color: var(--primary-color);
            text-decoration: none;
            font-weight: 500;
            transition: color 0.3s ease;
        }

        .form-footer a:hover {
            color: var(--primary-dark);
        }

        .remember-me {
            display: flex;
            align-items: center;
            margin-top: 15px;
            margin-bottom: 10px;
        }

        .remember-me input[type="checkbox"] {
            margin-right: 8px;
            width: 18px;
            height: 18px;
            accent-color: var(--primary-color);
        }

        .remember-me label {
            font-size: 14px;
            color: var(--text-secondary);
            margin-bottom: 0;
            cursor: pointer;
        }

        @media (max-width: 480px) {
            .form-container {
                padding: 30px 25px;
                margin: 20px;
            }
            
            .theme-toggle {
                top: 15px;
                right: 15px;
                padding: 8px 12px;
                font-size: 12px;
            }
        }

        .login-animation {
            animation: slideInUp 0.6s ease-out;
        }

        @keyframes slideInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
    </style>
</head>
<body>
    <button class="theme-toggle" onclick="toggleTheme()">üåô Dark Mode</button>

    <div class="floating-shapes">
        <div class="shape"></div>
        <div class="shape"></div>
        <div class="shape"></div>
    </div>

    <div class="form-container login-animation">
        <div class="form-header">
            <h2>Welcome Back</h2>
            <p>Sign in to your account</p>
        </div>

        <form action="/users/login" method="POST">
            <div class="form-group">
                <label for="username">Username or Email</label>
                <div class="input-wrapper">
                    <input type="text" id="email" placeholder="john or john123@gmail.com" name="email" required>

                    <span class="input-icon">üë§</span>
                </div>
            </div>

            <div class="form-group">
                <label for="password">Password</label>
                <div class="password-wrapper">
                    <input type="password" id="password" placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢" name="password" required>
                    <span class="input-icon">üîí</span>
                    <button type="button" class="password-toggle" onclick="togglePassword()">üëÅÔ∏è</button>
                </div>
                <div class="forgot-password">
                    <a href="/forgot-password">Forgot Password?</a>
                </div>
            </div>

            <div class="remember-me">
                <input type="checkbox" id="remember" name="remember">
                <label for="remember">Remember me</label>
            </div>

            <div class="button-group">
                <button type="submit" class="btn btn-primary">Sign In</button>
            </div>
        </form>

        <div class="form-footer">
            <p>Don't have an account? <a href="/users/register">Create Account</a></p>
        </div>
    </div>

    <script>
        // Theme toggle functionality
        function toggleTheme() {
            const body = document.body;
            const themeToggle = document.querySelector('.theme-toggle');
            const currentTheme = body.getAttribute('data-theme');
            
            if (currentTheme === 'dark') {
                body.removeAttribute('data-theme');
                themeToggle.textContent = 'üåô Dark Mode';
                localStorage.setItem('theme', 'light');
            } else {
                body.setAttribute('data-theme', 'dark');
                themeToggle.textContent = '‚òÄÔ∏è Light Mode';
                localStorage.setItem('theme', 'dark');
            }
        }

        // Load saved theme
        function loadTheme() {
            const savedTheme = localStorage.getItem('theme');
            const themeToggle = document.querySelector('.theme-toggle');
            
            if (savedTheme === 'dark') {
                document.body.setAttribute('data-theme', 'dark');
                themeToggle.textContent = '‚òÄÔ∏è Light Mode';
            }
        }

        // Password toggle functionality
        function togglePassword() {
            const passwordInput = document.getElementById('password');
            const toggleButton = document.querySelector('.password-toggle');
            
            if (passwordInput.type === 'password') {
                passwordInput.type = 'text';
                toggleButton.textContent = 'üôà';
            } else {
                passwordInput.type = 'password';
                toggleButton.textContent = 'üëÅÔ∏è';
            }
        }

        // Form validation and enhancement
        function enhanceForm() {
            const form = document.querySelector('form');
            const inputs = form.querySelectorAll('input[required]');
            
            // Add real-time validation
            inputs.forEach(input => {
                input.addEventListener('blur', function() {
                    validateField(this);
                });
                
                input.addEventListener('input', function() {
                    if (this.classList.contains('error')) {
                        validateField(this);
                    }
                });
            });
            
            // Handle form submission
            form.addEventListener('submit', function(e) {
                let isValid = true;
                
                inputs.forEach(input => {
                    if (!validateField(input)) {
                        isValid = false;
                    }
                });
                
                if (!isValid) {
                    e.preventDefault();
                }
            });
        }

        function validateField(field) {
            const value = field.value.trim();
            let isValid = true;
            
            // Remove existing error styling
            field.style.borderColor = '';
            field.classList.remove('error');
            
            // Check if field is empty
            if (!value) {
                showFieldError(field, 'This field is required');
                isValid = false;
            } else if (field.type === 'email' || field.name === 'username') {
                // Basic email validation if it contains @
                if (value.includes('@') && !isValidEmail(value)) {
                    showFieldError(field, 'Please enter a valid email address');
                    isValid = false;
                }
            }
            
            return isValid;
        }

        function showFieldError(field, message) {
            field.style.borderColor = 'var(--error)';
            field.classList.add('error');
            
            // Remove existing error message
            const existingError = field.parentNode.parentNode.querySelector('.error-message');
            if (existingError) {
                existingError.remove();
            }
            
            // Add error message
            const errorDiv = document.createElement('div');
            errorDiv.className = 'error-message';
            errorDiv.style.color = 'var(--error)';
            errorDiv.style.fontSize = '12px';
            errorDiv.style.marginTop = '5px';
            errorDiv.textContent = message;
            field.parentNode.parentNode.appendChild(errorDiv);
        }

        function isValidEmail(email) {
            const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
            return emailRegex.test(email);
        }

        // Initialize everything when page loads
        document.addEventListener('DOMContentLoaded', function() {
            loadTheme();
            enhanceForm();
            
            // Add focus animation to inputs
            const inputs = document.querySelectorAll('input');
            inputs.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentNode.style.transform = 'scale(1.02)';
                });
                
                input.addEventListener('blur', function() {
                    this.parentNode.style.transform = 'scale(1)';
                });
            });
        });

        // Add some interactive effects
        document.addEventListener('mousemove', function(e) {
            const shapes = document.querySelectorAll('.shape');
            const x = e.clientX / window.innerWidth;
            const y = e.clientY / window.innerHeight;
            
            shapes.forEach((shape, index) => {
                const speed = (index + 1) * 0.5;
                const xPos = x * speed * 10;
                const yPos = y * speed * 10;
                shape.style.transform += ` translate(${xPos}px, ${yPos}px)`;
            });
        });
    </script>
</body>
</html>